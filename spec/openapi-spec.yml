openapi: 3.0.3
info:
  title: Meal Ordering
  description: This is the API for Meal Ordering
  version: 1.0.0
tags:
  - name: Restaurant
    description: Everything about Restaurants
  - name: Order
    description: Everything about Orders
paths:
  /order:
    get:
      tags:
        - Order
      summary: Fetch all orders
      description: Fetch all orders
      operationId: fetchOrders
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '400':
          description: Invalid input
        '500':
          description: Server Problem
  /order/{id}:
    get:
      tags:
        - Order
      summary: Fetch single order
      description: Fetch single order
      operationId: fetchOrder
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: "#/components/schemas/ID"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid input
        '500':
          description: Server Problem
  /order/restaurant/{restaurantId}:
    post:
      tags:
        - Order
      summary: Create new order
      description: Create new order
      operationId: createOrder
      parameters:
        - in: path
          name: restaurantId
          required: true
          schema:
            $ref: "#/components/schemas/ID"
          description: ID of the restaurant for that the order will be
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid input
        '500':
          description: Server Problem
  /order/{orderId}/order-position:
    post:
      tags:
        - Order
      summary: Creates a new order position
      description: Creates a new order position
      operationId: createOrderPosition
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            $ref: "#/components/schemas/ID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderPosition"
          application/xml:
            schema:
              $ref: "#/components/schemas/OrderPosition"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid input
        '500':
          description: Server Problem

  /order/{orderId}/order-position/{orderPositionId}:
    patch:
      tags:
        - Order
      summary: Updates an order position
      description: Updates an order position
      operationId: updateOrderPosition
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            $ref: "#/components/schemas/ID"
        - in: path
          name: orderPositionId
          required: true
          schema:
            $ref: "#/components/schemas/ID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderPosition"
          application/xml:
            schema:
              $ref: "#/components/schemas/OrderPosition"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid input
        '500':
          description: Server Problem
    delete:
      tags:
        - Order
      summary: Deletes an order position
      description: Deletes an order position
      operationId: deleteOrderPosition
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            $ref: "#/components/schemas/ID"
        - in: path
          name: orderPositionId
          required: true
          schema:
            $ref: "#/components/schemas/ID"

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid input
        '500':
          description: Server Problem
  /restaurant:
    get:
      tags:
        - Restaurant
      summary: Fetch all restaurants
      description: Fetch all restaurants
      operationId: fetchRestaurants
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Restaurant'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Restaurant'
        '400':
          description: Invalid input
        '500':
          description: Server Problem
    post:
      tags:
        - Restaurant
      summary: Create a new restaurants
      description: Create a new restaurants
      operationId: createRestaurant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restaurant'
          application/xml:
            schema:
              $ref: '#/components/schemas/Restaurant'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
            application/xml:
              schema:
                $ref: '#/components/schemas/Restaurant'
        '400':
          description: Invalid input
        '500':
          description: Server Problem
  /restaurant/{id}:
    get:
      tags:
        - Restaurant
      summary: Fetch restaurant
      description: Fetch restaurant
      operationId: fetchRestaurant
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: "#/components/schemas/ID"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
            application/xml:
              schema:
                $ref: '#/components/schemas/Restaurant'
        '400':
          description: Invalid input
        '500':
          description: Server Problem

    put:
      tags:
        - Restaurant
      summary: Updates a restaurants
      description: Updates a new restaurants
      operationId: updateRestaurant
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restaurant'
          application/xml:
            schema:
              $ref: '#/components/schemas/Restaurant'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
            application/xml:
              schema:
                $ref: '#/components/schemas/Restaurant'
        '400':
          description: Invalid input
        '500':
          description: Server Problem
    delete:
      tags:
        - Restaurant
      summary: Delete a restaurants
      description: Delete a new restaurants
      operationId: deleteRestaurant
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Successful operation
        '400':
          description: Invalid input
        '500':
          description: Server Problem

components:
  schemas:
    Restaurant:
      type: object
      required:
        - id
        - name
      properties:
        id:
          $ref: "#/components/schemas/ID"
        name:
          type: string
        style:
          type: string
        kind:
          type: string
        phone:
          type: string
        website:
          type: string
        email:
          type: string
        description:
          type: string
        shortDescription:
          type: string
        address:
          $ref: '#/components/schemas/Address'
    Address:
      type: object
      properties:
        street:
          type: string
        housenumber:
          type: string
        postal:
          type: string
        city:
          type: string
    Order:
      type: object
      required:
        - id
        - restaurantId
        - orderPositions
      properties:
        id:
          $ref: "#/components/schemas/ID"
        restaurantId:
          $ref: "#/components/schemas/ID"
        date:
          type: string
          format: date
        orderPositions:
          type: array
          items:
            $ref: "#/components/schemas/OrderPosition"
    OrderPosition:
      type: object
      required:
        - id
        - name
        - meal
        - price
      properties:
        id:
          $ref: "#/components/schemas/ID"
        index:
          type: integer
          format: int32
        name:
          type: string
        meal:
          type: string
        price:
          type: number
          format: float
        paid:
          type: number
          format: float
        tip:
          type: number
          format: float
    ID:
      type: string
      format: uuid

  requestBodies:
    Restaurant:
      description: Restaurant object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Restaurant'
        application/xml:
          schema:
            $ref: '#/components/schemas/Restaurant'
    Order:
      description: Order object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Order'
        application/xml:
          schema:
            $ref: '#/components/schemas/Order'

name: Build & Release Main

on:
  push:
    branches:
      - semver_experiments  # Trigger the workflow when there's a push to the main branch
  workflow_dispatch:  # Allow manual triggering from the GitHub Actions tab

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          java-version: '22'
          distribution: 'temurin'

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
          fetch-tags: 'true'

      - name: Get release version
        id: get_release_version
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          latest_release=$(gh release view --json name --jq '.name')
          IFS='.' read -r major minor patch <<< "$latest_release"
          new_major=$((major + 1))
          new_version="${new_major}.${minor}.${patch}"
          echo "Latest release: $latest_release"
          echo "New version: $new_version"
          echo "LATEST_RELEASE=$latest_release" >> "$GITHUB_OUTPUT"
          echo "NEW_RELEASE_VERSION=$new_version" >> "$GITHUB_OUTPUT" 

      - name: Release
        run: |
          new_version=$RELEASE_VERSION
          echo "Releasing Version $new_version"
        env:
          RELEASE_VERSION: ${{ steps.get_release_version.outputs.NEW_RELEASE_VERSION }}

      - name: Semver
        id: get_semver_version
        uses: paulhatch/semantic-version@v5.4.0
        with:
          bump_each_commit: 'false'
          bump_each_commit_patch_pattern: ''
          major_pattern: 'feat:'
          minor_pattern: 'fix:'
          search_commit_body: 'true'

      - name: Release 2
        run: |
          new_version=$RELEASE_VERSION2
          echo "Releasing 2 Version $new_version"
        env:
          RELEASE_VERSION2: ${{ steps.get_semver_version.outputs.version_tag }}

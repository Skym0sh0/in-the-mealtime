name: Build & Release Main

on:
  push:
    branches:
      - main  # Trigger the workflow when there's a push to the main branch
  workflow_dispatch:  # Allow manual triggering from the GitHub Actions tab

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          java-version: '22'
          distribution: 'temurin'

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get release version
        id: get_release_version
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          latest_release=$(gh release view --json name --jq '.name')
          IFS='.' read -r major minor patch <<< "$latest_release"
          new_major=$((major + 1))
          new_version="${new_major}.${minor}.${patch}"
          echo "Latest release: $latest_release"
          echo "New version: $new_version"
          echo "LATEST_RELEASE=$latest_release" >> "$GITHUB_OUTPUT"
          echo "NEW_RELEASE_VERSION=$new_version" >> "$GITHUB_OUTPUT" 

      # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@d9c87d481d55275bb5441eef3fe0e46805f9ef70 # v3.5.0

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build
        run: ./gradlew build --info --stacktrace

      - name: Build & Push Image
        run: |
          new_version=$RELEASE_VERSION
          echo "Releasing Version $new_version"
          ./gradlew jibBuildTar jib --info --stacktrace
          gh release create "v$new_version" -t "$new_version" -n "Release v$new_version"
          gh release upload "v$new_version" "backend/build/jib-image.tar"
          gh release upload "v$new_version" "backend/build/jib-image.json"
          gh release upload "v$new_version" "order-states.puml"
        env:
          RELEASE_VERSION: ${{ steps.get_release_version.outputs.NEW_RELEASE_VERSION }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
